<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 技术博客</title>
    <link>https://mingyu.lighting/posts/</link>
    <description>Recent content in Posts on 技术博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 02 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mingyu.lighting/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PDF转 Markdown 实现</title>
      <link>https://mingyu.lighting/posts/pdf%E8%BD%ACmarkdown%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/pdf%E8%BD%ACmarkdown%E5%AE%9E%E7%8E%B0/</guid>
      <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;&#xA;&lt;p&gt;由于经常需要将一些 PDF 文档转为 Markdown 以便后续的处理点评修改等工作需要，所以借助AI 技术实现了 PDF 抓 Markdown 的工具。&lt;/p&gt;&#xA;&lt;h2 id=&#34;项目介绍&#34;&gt;项目介绍&lt;/h2&gt;&#xA;&lt;p&gt;本工具可以将PDF文件高效地转换为Markdown格式，保留文档的结构和格式，便于后续编辑和处理。&lt;/p&gt;&#xA;&lt;h3 id=&#34;主要功能&#34;&gt;主要功能&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;PDF文档解析与内容提取&lt;/li&gt;&#xA;&lt;li&gt;文档结构识别与保留&lt;/li&gt;&#xA;&lt;li&gt;Markdown格式转换&lt;/li&gt;&#xA;&lt;li&gt;表格、图片等复杂元素处理&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;技术实现&#34;&gt;技术实现&lt;/h2&gt;&#xA;&lt;p&gt;工具基于AI技术实现了PDF内容的智能识别和转换，相比传统OCR方法，能更好地保留文档的原始结构。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;&#xA;&lt;p&gt;详细的使用方法和示例可以在GitHub仓库中找到：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mingyu110/AI/tree/main/pdf_tools&#34;&gt;PDF转Markdown工具&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;优势&#34;&gt;优势&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高保真度转换&lt;/li&gt;&#xA;&lt;li&gt;处理速度快&lt;/li&gt;&#xA;&lt;li&gt;支持复杂PDF文档&lt;/li&gt;&#xA;&lt;li&gt;减少手动排版工作&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;应用场景&#34;&gt;应用场景&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;技术文档转换与整理&lt;/li&gt;&#xA;&lt;li&gt;学术论文处理&lt;/li&gt;&#xA;&lt;li&gt;报告文档格式转换&lt;/li&gt;&#xA;&lt;li&gt;内容管理系统导入&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>微服务架构开发培训系列课程一</title>
      <link>https://mingyu.lighting/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%BC%80%E5%8F%91%E5%9F%B9%E8%AE%AD%E7%B3%BB%E5%88%97%E8%AF%BE%E7%A8%8B%E4%B8%80/</link>
      <pubDate>Fri, 02 May 2025 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%BC%80%E5%8F%91%E5%9F%B9%E8%AE%AD%E7%B3%BB%E5%88%97%E8%AF%BE%E7%A8%8B%E4%B8%80/</guid>
      <description>&lt;p&gt;最近对公司内部进行了微服务开发的系列培训课程，本文是微服务开发相关，后续还有微服务治理等系列分享培训。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-个人介绍&#34;&gt;1. 个人介绍&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;刘晋勋，曾在华为、阿里云、字节跳动担任多年技术架构师和技术团队TL，阿里云技术最佳实践、阿里云CADT作者&lt;/li&gt;&#xA;&lt;li&gt;开源爱好者，Kubernetes和lstio贡献者，多年关注云原生、软件架构与开发、云基础架构、Al&lt;/li&gt;&#xA;&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/mingyu110&#34;&gt;https://github.com/mingyu110&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;个人公众号：公共云与AI&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-微服务架构的优劣势&#34;&gt;2. 微服务架构的优劣势&lt;/h2&gt;&#xA;&lt;p&gt;微服务架构作为系统设计的四大支柱之一（Scalability)，在近年的技术架构设计里得到了越来越多的应用&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/f3fafaeec7467b325abf17dbb988840218e5a84efad8396fd826c33dfd2d94c7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;21-两个披萨团队法则&#34;&gt;2.1 &amp;ldquo;两个披萨&amp;quot;团队法则&lt;/h3&gt;&#xA;&lt;p&gt;亚马逊CEO杰夫·贝索斯提出的&amp;quot;两个披萨团队&amp;rdquo;(Two PizzaTeam)法则：团队规模应小到两个披萨能够喂饱，通常为6-8人。该法则与微服务架构高度契合：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;小团队提高沟通效率，减少协调成本&lt;/li&gt;&#xA;&lt;li&gt;团队规模对应服务粒度：每个&amp;quot;两个披萨团队&amp;quot;(6-8人)通常负责一个或少数几个微服务&lt;/li&gt;&#xA;&lt;li&gt;增强团队自主性和对服务的端到端责任感&lt;/li&gt;&#xA;&lt;li&gt;允许团队专注于单一业务能力或服务&lt;/li&gt;&#xA;&lt;li&gt;促进快速决策和迭代&lt;/li&gt;&#xA;&lt;li&gt;支持敏捷开发和DevOps文化&lt;/li&gt;&#xA;&lt;li&gt;康威定律体现：系统设计反映组织通信结构，小团队自然产生边界清晰的微服务&lt;/li&gt;&#xA;&lt;li&gt;团队边界应与服务边界一致：避免一个服务由多个团队维护，除了共享服务（基础设施团队或者平台团队可以负责多个共享服务）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;22-微服务架构的优势&#34;&gt;2.2 微服务架构的优势&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;技术异构性：可使用不同技术栈构建不同服务&lt;/li&gt;&#xA;&lt;li&gt;弹性：单个服务故障不会导致整个系统崩溃&lt;/li&gt;&#xA;&lt;li&gt;可扩展性：可按需独立扩展各服务而非整体应用&lt;/li&gt;&#xA;&lt;li&gt;易于部署：支持独立部署，降低整体风险&lt;/li&gt;&#xA;&lt;li&gt;组织对齐：团队可围绕业务能力组织，而非技术层次&lt;/li&gt;&#xA;&lt;li&gt;可组合性：服务可灵活组合构建新功能&lt;/li&gt;&#xA;&lt;li&gt;可替代性：服务可独立替换或重写，减少大规模重构&lt;/li&gt;&#xA;&lt;li&gt;独立演进：各服务可按不同速度和方向发展&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;23-微服务架构的劣势&#34;&gt;2.3 微服务架构的劣势&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式系统复杂性：引入网络延迟、分区容错等挑战&lt;/li&gt;&#xA;&lt;li&gt;运维成本高：需管理更多服务、监控和基础设施&lt;/li&gt;&#xA;&lt;li&gt;服务间通信成本：增加网络开销和故障点&lt;/li&gt;&#xA;&lt;li&gt;跨服务事务难：分布式事务实现复杂&lt;/li&gt;&#xA;&lt;li&gt;测试复杂度增加：集成测试和端到端测试变得困难&lt;/li&gt;&#xA;&lt;li&gt;数据一致性挑战：多数据库环境下保持一致性困难&lt;/li&gt;&#xA;&lt;li&gt;服务治理难度大：需要更完善的服务发现、配置管理等&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;24-单体应用拆分为微服务架构应用的示范和理念&#34;&gt;2.4 单体应用拆分为微服务架构应用的示范和理念&lt;/h3&gt;&#xA;&lt;h4 id=&#34;241-拆分示范&#34;&gt;2.4.1 拆分示范&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/0b631d9837c31b50fff3a21b8ae45de26655dd818bb3905a2b8ee0dacaaf4260.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;242-单一代码仓库模式&#34;&gt;2.4.2 单一代码仓库模式&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;谷歌、Facebook和微软等科技巨头在管理数百个微服务时都采用monorepo（单一代码仓库）模式，证明了即使在非常大规模的微服务架构下，monorepo依然可行且高效。Monorepo不会消除微服务间的边界，而是提供一个更高效的协作环境，使微服务开发更加顺畅和一致。解决微服务特有问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;依赖管理: 简化服务间共享代码的版本控制和依赖传播&lt;/li&gt;&#xA;&lt;li&gt;重构友好：跨服务API变更可同步进行，消除多仓库协调开销&lt;/li&gt;&#xA;&lt;li&gt;开发体验：简化本地开发环境设置，一次克隆可访问所有服务&lt;/li&gt;&#xA;&lt;li&gt;知识共享：促进团队间代码复用和最佳实践传播&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Monorepo（单一代码仓库）架构示范&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/01de79444a7974b3a1f92c464a35c999e9f01c83de2742f8e0ac4dae8506429e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;243-数据库拆分模式&#34;&gt;2.4.3 数据库拆分模式&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;微服务拆分的前提理念除了上述的单一代码仓库，数据库拆分模式也需要架构师提前根据不同的维度考虑选择，如下是微服务数据库拆分模式方案示意图以及选型考量表&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/102f8a2247483d7644c5eff2a57eb1b6586d21c74671f3fb2c98c198ff1f068b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;244-api-first设计理念&#34;&gt;2.4.4 API-First设计理念&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;API-First的原则&#xA;&lt;ul&gt;&#xA;&lt;li&gt;以API设计作为基础：在API优先的方法中，API是整个应用构建的基础。这需要精心规划和设计，以确保API满足所有利益相关者的需求，包括但不限于开发者、测试、合作伙伴和最终用户。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/ee65afc362856bd6ce75920274efdf685046166a1c2585b7e3561013f98e9388.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一致性与可重用性：API设计为在不同项目和应用中具有一致性和可重用性。这使得标准化变得简单,减少了开发时间，提升了解决方案的可扩展性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;协作与文档：API优先的方法强调开发团队、业务利益相关者和外部合作伙伴之间的协作。全面的文档对于确保每个人了解如何有效使用API至关重要。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;测试驱动开发：从一开始就对API进行严格的测试，以便在开发过程中尽早识别和解决问题。这有助于保持高质量标准，并降低后期出现昂贵错误的风险。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;API-First的收益&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS云资源成本及合规自动化优化方案</title>
      <link>https://mingyu.lighting/posts/aws%E4%BA%91%E8%B5%84%E6%BA%90%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 01 May 2025 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/aws%E4%BA%91%E8%B5%84%E6%BA%90%E6%88%90%E6%9C%AC%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;h2 id=&#34;一功能特性&#34;&gt;一、功能特性&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;资源合规监控&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;检测未标记的资源（EC2、S3、RDS 等）&lt;/li&gt;&#xA;&lt;li&gt;检测闲置的 EC2 实例&lt;/li&gt;&#xA;&lt;li&gt;监控安全组开放端口&lt;/li&gt;&#xA;&lt;li&gt;实时监控新创建或状态变更的资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;自动化操作&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自动为不合规资源添加标签&lt;/li&gt;&#xA;&lt;li&gt;自动停止闲置的 EC2 实例&lt;/li&gt;&#xA;&lt;li&gt;发送实时通知到钉钉&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;成本异常检测&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;每日自动分析 AWS 成本数据&lt;/li&gt;&#xA;&lt;li&gt;检测成本异常（超过过去 7 天平均值的设定阈值）&lt;/li&gt;&#xA;&lt;li&gt;发送详细异常报告并提供处理建议&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;二架构概述&#34;&gt;二、架构概述&lt;/h2&gt;&#xA;&lt;p&gt;本解决方案采用无服务器架构，主要由以下组件构成：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/aws-architecture.jpg&#34; alt=&#34;架构图&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;AWS Config&lt;/strong&gt;：负责持续监控和记录 AWS 资源配置变更，检测不合规的资源&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AWS EventBridge&lt;/strong&gt;：处理各类事件触发器，如 Config 规则变更、EC2 状态变更&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt;：提供自动化处理逻辑，包括资源合规处理和成本异常检测&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;AWS SNS&lt;/strong&gt;：用于消息通知路由&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;钉钉通知&lt;/strong&gt;：通过自定义的钉钉机器人发送通知和警报&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;整个解决方案通过 Terraform 实现基础设施即代码（IaC），便于版本控制和持续部署。&lt;/p&gt;&#xA;&lt;h2 id=&#34;三aws-服务说明&#34;&gt;三、AWS 服务说明&lt;/h2&gt;&#xA;&lt;p&gt;本解决方案使用了以下 AWS 服务：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;AWS Config&lt;/strong&gt; - 提供 AWS 资源清单、配置历史和配置变更通知的服务，使您能够进行合规性审核、安全性分析、资源变更跟踪和故障排除。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;AWS EventBridge&lt;/strong&gt; - 无服务器事件总线服务，使应用程序能够轻松地从各种来源接收事件数据并响应这些事件。在本解决方案中用于处理 Config 规则变更和 EC2 状态变更事件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;AWS Lambda&lt;/strong&gt; - 无服务器计算服务，允许您运行代码而无需配置或管理服务器。在本解决方案中用于执行资源合规处理和成本异常检测逻辑。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;AWS SNS (Simple Notification Service)&lt;/strong&gt; - 高度可用、持久、安全、完全托管的发布/订阅消息收发服务，支持分离微服务、分布式系统和无服务器应用程序。在本解决方案中用于通知路由。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Istio实践指南 之 最佳实践（一） Istio服务网格中实现优雅终止的技术指南</title>
      <link>https://mingyu.lighting/posts/istio%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97-%E4%B9%8B-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E4%B8%80-istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%B8%AD%E5%AE%9E%E7%8E%B0%E4%BC%98%E9%9B%85%E7%BB%88%E6%AD%A2%E7%9A%84%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</link>
      <pubDate>Wed, 30 Apr 2025 10:30:00 +0800</pubDate>
      <guid>https://mingyu.lighting/posts/istio%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97-%E4%B9%8B-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E4%B8%80-istio%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E4%B8%AD%E5%AE%9E%E7%8E%B0%E4%BC%98%E9%9B%85%E7%BB%88%E6%AD%A2%E7%9A%84%E6%8A%80%E6%9C%AF%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h3 id=&#34;istio实践指南-之-最佳实践一-istio服务网格中实现优雅终止的技术指南&#34;&gt;Istio实践指南 之 最佳实践（一） Istio服务网格中实现优雅终止的技术指南&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h4&gt;&#xA;&lt;p&gt;在微服务架构中，优雅终止（Graceful Shutdown）是确保服务质量和系统稳定性的关键机制。当使用 Istio 服务网格时，由于引入了 Envoy 代理作为 sidecar，优雅终止的实现变得更加复杂，需要特别关注。本文档详细介绍 Istio 环境中优雅终止的工作原理、常见问题及最佳实践解决方案。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-istio中的终止流程&#34;&gt;2. Istio中的终止流程&lt;/h4&gt;&#xA;&lt;h5 id=&#34;21-标准终止流程&#34;&gt;2.1 标准终止流程&lt;/h5&gt;&#xA;&lt;p&gt;当 Kubernetes 需要终止一个 Pod 时，会按照以下顺序执行操作：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pod 被标记为 &lt;code&gt;Terminating&lt;/code&gt; 状态&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pod 从服务的 Endpoints 列表中移除，不再接收新的流量&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pod 内的容器接收 &lt;code&gt;SIGTERM&lt;/code&gt; 信号&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;容器进入宽限期（默认 30 秒）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;若宽限期结束后容器仍未退出，发送 &lt;code&gt;SIGKILL&lt;/code&gt; 信号强制终止&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h5 id=&#34;22-istio-sidecar-特有的终止行为&#34;&gt;2.2 Istio Sidecar 特有的终止行为&lt;/h5&gt;&#xA;&lt;p&gt;在 Istio 环境中，终止流程存在以下特殊情况：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;当 Pod 开始停止时，Kubernetes 将其从服务的 Endpoints 中移除&lt;/li&gt;&#xA;&lt;li&gt;Envoy sidecar 同时接收到 &lt;code&gt;SIGTERM&lt;/code&gt; 信号&lt;/li&gt;&#xA;&lt;li&gt;Envoy 立即停止接受新的 &lt;code&gt;inbound&lt;/code&gt; 连接，但会继续处理现有连接&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Outbound&lt;/code&gt; 方向的流量仍然可以正常发起&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;关键问题&lt;/strong&gt;：默认情况下，Istio 会在 Pod 停止开始的 5 秒后强制终止 Envoy，无论其是否完成了所有连接的处理&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI零代码智能数据分析决策助手</title>
      <link>https://mingyu.lighting/posts/ai%E9%9B%B6%E4%BB%A3%E7%A0%81%E6%99%BA%E8%83%BD%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%86%B3%E7%AD%96%E5%8A%A9%E6%89%8B%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/ai%E9%9B%B6%E4%BB%A3%E7%A0%81%E6%99%BA%E8%83%BD%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%86%B3%E7%AD%96%E5%8A%A9%E6%89%8B%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;h2 id=&#34;一系统架构&#34;&gt;一、系统架构&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-工作流程设计&#34;&gt;1. 工作流程设计&lt;/h3&gt;&#xA;&lt;p&gt;该智能数据分析决策助手的工作流如下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/workflow.jpg&#34; alt=&#34;工作流设计&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;工作流主要分为两条主要路径：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;不需要执行SQL查询：直接提供答案&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;需要执行SQL查询：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;精准咨询需求：直接进入SQL生成和执行流程&lt;/li&gt;&#xA;&lt;li&gt;模糊咨询需求：先进行需求分析决策，再进入SQL生成和执行流程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;例如：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果用户输入精准需求，例如&amp;quot;按产品类别统计销售总额&amp;quot;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如果用户输入模糊需求，例如&amp;quot;给高消费用户发促销信息&amp;quot;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这两类业务数据分析需求，AI助手都可以自动执行并得到最终结果，整个过程不需要用户写SQL，而且写出的SQL和分析结果都符合用户的业务需求预期&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;11-工作流实际运行效果&#34;&gt;1.1 工作流实际运行效果&lt;/h3&gt;&#xA;&lt;h4 id=&#34;精准需求示例&#34;&gt;精准需求示例&lt;/h4&gt;&#xA;&lt;p&gt;用户明确知道想要查询的内容，直接提出具体需求，例如&amp;quot;按产品类别统计销售总额&amp;quot;：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/precise_query.gif&#34; alt=&#34;精准需求示例&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;模糊需求示例&#34;&gt;模糊需求示例&lt;/h4&gt;&#xA;&lt;p&gt;用户只有模糊的业务目标，没有明确的查询内容，例如&amp;quot;给高消费用户发促销信息&amp;quot;：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://mingyu.lighting/images/fuzzy_query.gif&#34; alt=&#34;模糊需求示例&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-核心节点说明&#34;&gt;2. 核心节点说明&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-初始化变量节点&#34;&gt;2.1 初始化变量节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;功能&lt;/strong&gt;: 加载数据库结构(schema)和术语映射&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;: database_schema(String), terminology_mapping(String), query_history(String)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;: 使用代码执行节点，确保database_schema以JSON字符串形式输出&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;关键处理&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将Object类型转换为String类型以便传递&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database_schema_obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loads(database_schema_str)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database_schema &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; json&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dumps(database_schema_obj)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;22-问题分析节点&#34;&gt;2.2 问题分析节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;: LLM节点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型&lt;/strong&gt;: DeepSeek-Chat&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 分析用户输入的问题意图和查询需求&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入&lt;/strong&gt;: 用户输入文本&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;: 问题分析结果&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;23-代码执行节点json解析&#34;&gt;2.3 代码执行节点(JSON解析)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 解析问题分析结果，提取关键信息&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入&lt;/strong&gt;: 问题分析节点的输出&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;needs_sql(Number): 1表示需要SQL，0表示不需要&lt;/li&gt;&#xA;&lt;li&gt;其他结构化信息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;关键逻辑&lt;/strong&gt;: 对LLM输出进行结构化处理，转换为工作流可使用的变量&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;24-条件判断节点&#34;&gt;2.4 条件判断节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 根据needs_sql值选择流程分支&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;条件&lt;/strong&gt;: 检查needs_sql变量值&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分支&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当needs_sql=1时：转向澄清节点&lt;/li&gt;&#xA;&lt;li&gt;当needs_sql=0时：直接回答&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;25-澄清节点精准模糊需求判断&#34;&gt;2.5 澄清节点(精准/模糊需求判断)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;: LLM节点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型&lt;/strong&gt;: DeepSeek-Chat&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 判断用户需求是精准需求还是模糊需求&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;: 需求类型判断结果&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分支&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;精准需求：直接进入SQL生成流程&lt;/li&gt;&#xA;&lt;li&gt;模糊需求：进入需求分析决策流程&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;26-需求分析决策节点&#34;&gt;2.6 需求分析决策节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;: LLM节点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型&lt;/strong&gt;: DeepSeek-Chat&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 对模糊需求进行深入分析，确定具体查询需求&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入&lt;/strong&gt;: 用户输入文本、澄清节点结果&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;: 具体化的查询需求&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;27-sql生成节点&#34;&gt;2.7 SQL生成节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;: LLM节点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型&lt;/strong&gt;: DeepSeek-Coder&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 根据用户需求生成PostgreSQL查询&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入&lt;/strong&gt;: database_schema(String), 用户需求(精准需求或经分析的模糊需求)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;提示词&lt;/strong&gt;: 包含数据库结构信息和精确查询要求&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;: SQL查询代码&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;28-sql查询准备节点&#34;&gt;2.8 SQL查询准备节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;类型&lt;/strong&gt;: 代码执行节点&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;: 处理SQL代码，准备执行&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输入&lt;/strong&gt;: SQL生成节点输出的SQL代码&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;输出&lt;/strong&gt;: 准备执行的SQL查询语句&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;处理内容&lt;/strong&gt;: 清理SQL代码中的markdown标记，格式化SQL&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;29-sql查询执行节点&#34;&gt;2.9 SQL查询执行节点&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;类型&lt;/strong&gt;: 代码执行节点&lt;/p&gt;</description>
    </item>
    <item>
      <title>Istio 服务网格入门指南</title>
      <link>https://mingyu.lighting/posts/istio-introduction/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/istio-introduction/</guid>
      <description>&lt;h2 id=&#34;什么是-istio&#34;&gt;什么是 Istio？&lt;/h2&gt;&#xA;&lt;p&gt;Istio 是一个开源的服务网格平台，它提供了一种统一的方式来管理、连接和保护微服务。作为一个服务网格，Istio 在不修改应用程序代码的情况下，为分布式应用程序提供了流量管理、安全性和可观察性等关键功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;istio-的核心功能&#34;&gt;Istio 的核心功能&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-流量管理&#34;&gt;1. 流量管理&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;智能路由和负载均衡&lt;/li&gt;&#xA;&lt;li&gt;流量分流和金丝雀发布&lt;/li&gt;&#xA;&lt;li&gt;故障注入和熔断&lt;/li&gt;&#xA;&lt;li&gt;A/B 测试&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-安全&#34;&gt;2. 安全&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;服务间身份验证&lt;/li&gt;&#xA;&lt;li&gt;访问控制和授权&lt;/li&gt;&#xA;&lt;li&gt;加密通信（mTLS）&lt;/li&gt;&#xA;&lt;li&gt;证书管理&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-可观察性&#34;&gt;3. 可观察性&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;分布式追踪&lt;/li&gt;&#xA;&lt;li&gt;访问日志&lt;/li&gt;&#xA;&lt;li&gt;服务监控&lt;/li&gt;&#xA;&lt;li&gt;性能指标&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;istio-架构&#34;&gt;Istio 架构&lt;/h2&gt;&#xA;&lt;p&gt;Istio 服务网格在逻辑上分为数据平面和控制平面：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据平面&lt;/strong&gt;：由部署为 sidecar 的 Envoy 代理组成&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;控制平面&lt;/strong&gt;：由 istiod 组成，负责管理和配置代理&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;快速开始&#34;&gt;快速开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;安装-istio&#34;&gt;安装 Istio&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -L https://istio.io/downloadIstio | sh -&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd istio-*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PWD/bin:$PATH&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;istioctl install --set profile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;demo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;部署示例应用&#34;&gt;部署示例应用&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl label namespace default istio-injection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;enabled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;最佳实践&#34;&gt;最佳实践&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;从小规模开始，逐步扩大部署范围&lt;/li&gt;&#xA;&lt;li&gt;合理配置资源限制&lt;/li&gt;&#xA;&lt;li&gt;监控关键指标&lt;/li&gt;&#xA;&lt;li&gt;定期更新版本&lt;/li&gt;&#xA;&lt;li&gt;建立备份和恢复策略&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;常见问题&#34;&gt;常见问题&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能开销&lt;/strong&gt;：如何优化 sidecar 资源使用&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;调试难度&lt;/strong&gt;：如何有效排查服务网格问题&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;配置复杂性&lt;/strong&gt;：如何简化和管理配置&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;Istio 作为一个功能强大的服务网格平台，为微服务架构提供了完整的解决方案。通过合理使用 Istio，可以显著提升服务的可靠性、安全性和可观察性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的第一篇技术博客</title>
      <link>https://mingyu.lighting/posts/my-first-post/</link>
      <pubDate>Sat, 20 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://mingyu.lighting/posts/my-first-post/</guid>
      <description>&lt;h1 id=&#34;欢迎来到我的技术博客&#34;&gt;欢迎来到我的技术博客&lt;/h1&gt;&#xA;&lt;p&gt;这是我的第一篇技术博客文章。在这里，我将分享我的技术经验和学习心得。&lt;/p&gt;&#xA;&lt;h2 id=&#34;markdown-支持&#34;&gt;Markdown 支持&lt;/h2&gt;&#xA;&lt;p&gt;这个博客支持完整的 Markdown 语法，包括：&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-代码块&#34;&gt;1. 代码块&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello_world&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-表格&#34;&gt;2. 表格&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;功能&lt;/th&gt;&#xA;          &lt;th&gt;支持情况&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Markdown&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;代码高亮&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;数学公式&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;图片&lt;/td&gt;&#xA;          &lt;td&gt;✅&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;3-引用&#34;&gt;3. 引用&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这是一段引用文字&#xA;可以包含多行&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;4-列表&#34;&gt;4. 列表&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;项目1&lt;/li&gt;&#xA;&lt;li&gt;项目2&#xA;&lt;ul&gt;&#xA;&lt;li&gt;子项目1&lt;/li&gt;&#xA;&lt;li&gt;子项目2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-链接&#34;&gt;5. 链接&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com&#34;&gt;点击这里访问我的GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;数学公式&#34;&gt;数学公式&lt;/h2&gt;&#xA;&lt;p&gt;支持 LaTeX 数学公式：&lt;/p&gt;&#xA;&lt;p&gt;$E = mc^2$&lt;/p&gt;&#xA;&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;&#xA;&lt;p&gt;这个博客系统非常适合用来写技术文章，支持：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Markdown 格式&lt;/li&gt;&#xA;&lt;li&gt;代码高亮&lt;/li&gt;&#xA;&lt;li&gt;数学公式&lt;/li&gt;&#xA;&lt;li&gt;图片上传&lt;/li&gt;&#xA;&lt;li&gt;分类和标签&lt;/li&gt;&#xA;&lt;li&gt;搜索功能&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;希望这个博客能帮助我更好地分享技术知识！&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
